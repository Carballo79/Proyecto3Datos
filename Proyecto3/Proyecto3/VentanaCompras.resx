<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnValidarCliente.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>